#!/usr/bin/python2

from fsk import Fsk
import struct
import json 
import time
import os
import spidev
from gps import GPS
from ping import Ping
import smbus
import signal
import sys

def readChannel(channel):
	adc = spi.xfer2([1,(8+channel)<<4,0])
	data = ((adc[1]&3) << 8) + adc[2]
	return data >> 2

def getAnalog(n):
	return [readChannel(i) for i in range(n)]

def getGPS():
	pass

def getIMU():
	return [read_word_data(IMU_ADDRESS, 2*n + 0x3B) for n in range(7)]
	pass

def getPing():
	pass

def signal_handler(signal, frame):
	gps.stop()
	ping.stop()
	fsk.stop()
	sys.exit(0)

NUMBER_ANALOG = 8

IMU_ADDRESS = 0b1101000 # Or 0b1101001

spi = spidev.SpiDev()
spi.open(0,0)

bus = smbus.SMBus(1)

signal.signal(signal.SIGINT, signal_handler)
signal.signal(signal.SIGTERM, signal_handler)


with open("conf.json") as fconf, open("dump.txt", "a") as fdump:
	conf = json.load(fconf)
	fsk = Fsk(conf)
	fsk.start()

	gps = GPS("/dev/ttyS3", 38400)
	gps.start()

	ping = Ping(size = .783)
	ping.start()

	while True:
		vals = []
		vals.append(getAnalog(NUMBER_ANALOG))
		vals.append(gps.get_data())
		vals.append(ping.get_data())

		#sys.stderr.write(str(ping.get_data()[0]) + "\n")

		fsk.feed(vals)
		fdump.write(",".join(map(str, vals)))
		time.sleep(0.1)
